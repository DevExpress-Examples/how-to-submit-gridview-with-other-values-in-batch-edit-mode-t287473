@{
    ViewBag.Title = "How to submit GridView with other values using multiple requests";
}
@model SubmitMultipleValues.Models.MainModel
<script>
    function OnClick(s, e) {
        if ($("#myForm").valid()) {
            if (GridView.batchEditApi.HasChanges())
                GridView.UpdateEdit();
            else
                $("#myForm").submit();
        }
    }

    function OnEndCallback(s, e) {
        if (s.cpErrorFlag == false) {
            $("#myForm").submit();
        }
    }
</script>
<h2>How to submit GridView with other values using multiple requests</h2>

@using (Html.BeginForm("PostModel", "Test2", FormMethod.Post, new { id = "myForm" }))
{   
    @Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "FormLayout";

    var groupItem = settings.Items.AddGroupItem(groupSettings =>
    {
        groupSettings.Caption = "Main information";
        groupSettings.ShowCaption = DefaultBoolean.True;
        groupSettings.GroupBoxDecoration = GroupBoxDecoration.Default;
    });

    groupItem.SettingsItems.ShowCaption = DefaultBoolean.True;
    groupItem.SettingsItemCaptions.Location = LayoutItemCaptionLocation.Left;

    groupItem.SettingsItemHelpTexts.Position = HelpTextPosition.Auto;

    groupItem.Items.Add(m => m.ID, item =>
    {
        item.HelpText = "Help text for ID";
        SpinEditSettings s = item.NestedExtensionSettings as SpinEditSettings;
        s.ShowModelErrors = true;
    });
    groupItem.Items.Add(m => m.Name, item =>
    {
        TextBoxSettings s = item.NestedExtensionSettings as TextBoxSettings;
        s.ShowModelErrors = true;
        item.HelpText = "Help text for Name";
    });
    groupItem.Items.Add(m => m.Description, item =>
    {
        item.NestedExtensionType = FormLayoutNestedExtensionItemType.Memo;
        MemoSettings s = item.NestedExtensionSettings as MemoSettings;
        s.ShowModelErrors = true;
        item.HelpText = "Help text for Description";
    });
    settings.Items.AddGroupItem(groupSettings =>
    {
        groupSettings.Caption = "Details";
        groupSettings.ShowCaption = DefaultBoolean.True;
        groupSettings.Items.Add(itemSettings =>
        {
            itemSettings.ShowCaption = DefaultBoolean.False;
            itemSettings.SetNestedContent(() =>
            {
                Html.RenderAction("GridViewPartial");
            });
        });

    });
}).GetHtml()
    @Html.DevExpress().Button(settings =>
{
    settings.Name = "btnSubmit";
    settings.Text = "Submit Changes";
    settings.UseSubmitBehavior = false;
    settings.ClientSideEvents.Click = "OnClick";
}).GetHtml()
    @Html.DevExpress().Button(settings =>
{
    settings.Name = "btnCancel";
    settings.Text = "Cancel Changes";
    settings.ClientSideEvents.Click = "function(s, e) { ASPxClientEdit.ClearEditorsInContainer(null);  GridView.CancelEdit(); }";
}).GetHtml()
 
}

